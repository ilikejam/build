(add-to-list 'load-path "~/.emacs.d/modules")

(column-number-mode 1)
(global-set-key [mouse-2] 'mouse-yank-at-click)
(global-set-key [mouse-4] 'delete-backward-char)
(prefer-coding-system 'utf-8-unix)
(show-paren-mode 1)
(set-default buffer-file-coding-system 'utf-8-unix)
(set-default default-buffer-file-coding-system 'utf-8-unix)
(set-default-coding-systems 'utf-8-unix)
(setq select-active-regions nil)
(setq mouse-drag-copy-region t)
(global-set-key [mouse-2] 'mouse-yank-at-click)
(setq default-case-fold-search nil)
(setq frame-title-format "%b - Emacs")
(tool-bar-mode -1)

(autoload 'gfm-mode "markdown-mode" "Major mode for editing Git Markdown files" t)
(autoload 'go-mode "go-mode" "Major mode for editing golang")
(autoload 'markdown-mode "markdown-mode" "Major mode for editing Markdown files" t)
(autoload 'powershell "powershell" "Run powershell as a shell within emacs." t) 
(autoload 'powershell-mode "powershell-mode" "Major mode for editing dirty PowerShell nonsense")
(autoload 'puppet-mode "puppet-mode" "Major mode for editing Puppet files" t)
(autoload 'puppetfile-mode "puppetfile-mode" "Major mode for editing r10k Puppefile files")

(require 'web-mode)

(add-to-list 'auto-mode-alist '("\\.erb\\'" . web-mode))
(add-to-list 'auto-mode-alist '("\\.go\\'" . go-mode))
(add-to-list 'auto-mode-alist '("\\.markdown\\'" . gfm-mode))
(add-to-list 'auto-mode-alist '("\\.md\\'" . markdown-mode))
(add-to-list 'auto-mode-alist '("\\.org\\'" . org-mode))
(add-to-list 'auto-mode-alist '("\\.pack\\'" . ruby-mode))
(add-to-list 'auto-mode-alist '("\\.pp\\'" . puppet-mode))
(add-to-list 'auto-mode-alist '("\\.ps1\\'" . powershell-mode))
(add-to-list 'auto-mode-alist '("\\.rack\\'" . ruby-mode))
(add-to-list 'auto-mode-alist '("\\.text\\'" . markdown-mode))
(add-to-list 'auto-mode-alist '("\\.yaml\\'" . yaml-mode))
(add-to-list 'auto-mode-alist '("\\.yml\\'" . yaml-mode))
(add-to-list 'auto-mode-alist '("Puppetfile" . puppetfile-mode))
(add-to-list 'auto-mode-alist '("Vagrantfile" . ruby-mode))

(setq org-startup-truncated nil)
(setq select-active-regions nil)
(setq mouse-drag-copy-region t)
(setq inhibit-splash-screen t)
(setq initial-scratch-message "")
(setq-default indent-tabs-mode nil)
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(default ((t (:family "Hack" :foundry "outline" :slant normal :weight normal :height 80 :width normal)))))

(defun sort-lines-nocase ()
  (interactive)
  (let ((sort-fold-case t))
    (call-interactively 'sort-lines)))
(global-set-key (kbd "M-s") 'sort-lines-nocase)

(add-to-list 'default-frame-alist '(background-color . "black"))
(add-to-list 'default-frame-alist '(foreground-color . "gray"))
(add-to-list 'default-frame-alist '(cursor-color .     "gray"))
(add-to-list 'default-frame-alist '(border-color .     "gray"))
(custom-set-faces '(fringe ((t (:background "grey" :foreground "black")))))
