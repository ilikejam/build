#!/bin/bash -x
# This is not a git hook - run before commiting.
# Run with no args to lint .pp and .erb files.
# Run as "$0 all" to provision vms listed in ALLVMS.
# Run as "$0 <vm> ..." to provison a set of vms.

ALLVMS="moduletest6 moduletest7"

set -e

if [ $# -eq 0 ]
then
    unset VMS
elif [[ $1 == "all" ]]
then
    VMS="$ALLVMS"
else
    VMS="$@"
fi

err=0
VPATH=~/vagrant
[ `uname -o` == 'Cygwin' ] && PUPPET='/cygdrive/c/Program Files/Puppet Labs/Puppet/bin/puppet.bat' || PUPPET=puppet
export PUPPET
PUPPETFILE=~/git/r10k/Puppetfile
MODULES=~/git/puppet-modules
HIERA=~/git/hieradata

cd "$MODULES"
for dir in *
do
    if [ -d "$dir" ]
    then
        cd "$dir"

        while read file
        do
            echo "Linting $file"
            dos2unix "$file" &> /dev/null
            sed -i 's/^[[:space:]]$//' "$file"
            sed -i 's/[[:space:]][[:space:]]*$//' "$file"
            puppet-lint --no-80chars-check --with-filename --no-class_inherits_from_params_class-check --fail-on-warnings "$file"
            "${PUPPET}" parser validate "$file"
        done < <(git diff --name-status --diff-filter=AM  | sed 's/^[A|M][[:space:]]*//' | egrep '\.pp$')

        while read file
        do
            echo "Linting $file"
            dos2unix "$file" &> /dev/null
            erb -x -T - "$file" | ruby -c > /dev/null
        done < <(git diff --name-status --diff-filter=AM | sed 's/^[A|M][[:space:]]*//' | egrep '\.erb$')
        
        cd ..
    fi
done

if [ -n "$VMS" ]
then
    # Test basic connectivity to the forge.
    curl -f 'https://forge.puppetlabs.com/puppetlabs/stdlib' > /dev/null

    cd "$VPATH"
    # Grab current Puppetfile and drop the git repos (i.e. leave forge mods only)
    # This will break if we start using git-provided remotes. Be warned.
    sed ':loop; /, *$/ {N; s/,[[:space:]]*\n[[:space:]]*:/, :/}; t loop ' "$PUPPETFILE" | grep -v ':git[[:space:]]*=>' > Puppetfile
    r10k puppetfile install -v
    r10k puppetfile purge -v
    # Grab current Puppetfile and drop the forge repos (i.e. leave git mods only)
    # This will break if we start using git-provided remotes. Be warned.
    # Can't use r10k for the git repos as we're pre-commit/push
    modules=$(sed ':loop; /, *$/ {N; s/,[[:space:]]*\n[[:space:]]*:/, :/}; t loop ' "$PUPPETFILE" | grep ':git[[:space:]]*=>' | awk -F',' '{print $1}' | sed "s/mod[[:space:]]*[\'|\"]//; s/[\'|\"][[:space:]]*$//")
    for mod in $modules
    do
        rsync -av --delete --exclude .git "$MODULES"/"$mod" "$VPATH"/modules
    done
    rsync -av --delete --exclude .git "$HIERA"/ "$VPATH"/hieradata

    for VM in $VMS
    do
        cd "$VPATH"
        case `vagrant status "$VM" | grep '^'"$VM" | awk '{print $2}'` in
            running)
                vagrant provision "$VM"
	        ;;
            poweroff|aborted)
                vagrant up --provision "$VM"
                ;;
            not)
                vagrant up "$VM"
                ;;
            *)
                echo "Vagrant VM $VM seems to be in a weird state, or isn't configured. Doing nothing."
                ;;
        esac
    done
fi
